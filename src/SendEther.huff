
/** 
 *  SEND_ETHER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when called with function `sendEther(address)` to
 *  transfer the value sent with the call to the address in the argument.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function sendEther(address) payable returns()


#define macro MAIN() = takes(0) returns(0) {
    // Get the function selector
    0x00 calldataload 0xE0 shr          // [func_sig]

    __FUNC_SIG(sendEther) eq sendEther jumpi // jump to sendEther if func signature matches

    0x00 dup1 revert // Revert if no match is found.

    sendEther:
        SEND_ETHER()
}


#define macro SEND_ETHER() = takes(0) returns(0) {
    0x00                    // [retSize]
    0x00                    // [retOffset, retSize]
    0x00                    // [argsSize, retOffset, retSize]
    0x00                    // [argsOffset, argsSize, retOffset, retSize]
    callvalue               // [value, argsOffset, argsSize, retOffset, retSize]
    0x04 calldataload       // [address, value, argsOffset, argsSize, retOffset, retSize]
    gas                     // [gas, address, value, argsOffset, argsSize, retOffset, retSize]
    call                    // []
}
